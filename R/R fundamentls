R
    Bahasa pemrograman dan software utk analisis data 
    Memiliki fitur yg banyak dan lengkap (puluhan ribu fitur)   
        library dapat digunakan utk baca file, database, grafik, 
                                    membuat dashboard bahkan ML 
    R bersifat free dan open source

Data
    Penggunaan aplikasi yg semakin luas menghasilkan banyak data dalam volume besar (big data)  
    Data" tersebut blm tentu menjadi info yg dapat digunakan jika tidak dikelola dengan baik 

    Maka diperlukan Data Scientist
        Data Science = Disiplin ilmu yg mempelajari bagaimana mengubah data menjadi info yg berguna 
        Data Scientist = orang yg mempelajari data science 
    
Alasan mengapa R digunakan 
    1. Lebih mudah dipelajari   
        R lebih mudah dipelajari dibandingkan dengan Java, C#, JS
    2. Lebih cepat 
        R menghasilkan output lbih cepat dibanding bahasa lain 
        R juga dapat menghasilkan visualisasi yg membantu data scientist 
    3. Lebih kaya fitur 
        R dapat menjawab semua permasalahan data
        cth : utk mengatasi permasalahan optimasi stok di E-commerce, R dpt menghasilkan rekomendasi product packaging 
              utk merapikan data (func tidyr)
              utk baca file csv (comma separated values), tsv (tab separated values), fwf (fixed-width formatted file) (func readr)
              utk baca xlsx (func openxlsx)
              utk baca xml (func xml)
              utk melakukan transformasi data (func dplyr)
              utk membuat grafik (func ggplot2)
              dan msih banyak lagi (jsonlite, twitteR, tm, qcc, reshape2, MissMDA, httr, features)
    4. Approved
        R banyak digunakan oleh perusahaan besar 
        cth : Uber, Microsoft, AirBNB, FB, Anz

R dapat digunakan utk Pengolahan data dengan framework 3C 
    Capture, Clean, Consume
R digunakan utk melakukan perhitungan matematika, menampilkan grafik, pemodelan berbasis statistik, pemodelan Machine Learning

Output R 
    R melakukan pembacaan per line (secara sequential) dan melakukan output secara sequential juga 
    jika kita mengetikkan 
        9
        "Budi"
    maka outputnya adalah 
        > 9 
        [1] 9 
        > "Budi"
        [1] Budi
    
    yg berrti 
        > = prompt dari R utk mnrima input 
        [1] = posisi indeks dari output baris pertama, output hnya punya 1 item, maka hanya muncul 1
    
    utk print suatu string, bisa menggunakkan print()

R bersifat case-sensitive, sehingga perlu memperhatikan penulisan kode 
    "01" dan "1" dianggap berbeda jika dalam string 
        jadi, jika diminta menggunakkan 2 digit, maka tetap harus diperhatikan 0 nya 
    01 dan 1 dianggap sama jika dalam angka 

    "12-01-1987" dan "12-1-1987" dianggap berbeda jika dalam string 
        karena 2 format tanggal tersebut dianggap sebagai teks yg berbeda 

Function    
    object di R yg parameternya dapat diisi 1/lebih dri 1, dan dapat mengembalikan nilai
    Statement atau perintah yg dibuat utk mengerjakan suatu task khusus (sehingga dapat dipanggil berulang")
    
    c() (combine) adalah salah satu function utk membuat urutan angka/teks 
    ketika kita mengetikkan c(10:40)
        maka outputnya adalah
        > c(10:40)
        [1] 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
        [26] 35 36 37 38 39 40
    
    yg berrti 
        [1] = posisi indeks dari output baris pertama, maka 10 urutan pertama 
        [26] = posisi indeks dari output baris kedua, maka 35 adalah urutan ke 26
    
    jika c() diubah menjadi C(), maka akan terjadi error karena C bukanlah func yg diketahui R

Variabel
    R menyimpan variabel sama seperti python, hanya perlu memanggil namanya dan otomatis akan menyimpan nilainya 
        bisa berupa angka, string, bilangan dengan operasi matematis, hasil suatu func 
    
    Keunikan dari R adalah operator assignment tidak menggunakkan =, melainkan menggunakkan tanda panah <-
    cth :
        budi_berat_kg <- 68 
        santi_berat_kg <- 54

        budi_berat_kg
        santi_berat_kg

    maka outputnya 
        > budi_berat_kg <- 68 

        > santi_berat_kg <- 54
        
        > budi_berat_kg
        [1] 68
        
        > santi_berat_kg
        [1] 54

    apabila dipanggil, akan menampilkan angka dari output tersebut 

Comment,
    utk comment menggunakkan #


Tipe data 
    Vector
        tipe data yg menyimpan deretan nilai dengan tipe data sama utk tiap elemennya (array)
        vector didefinisikan dengan satu func yaitu c()
        dan bisa disimpan ke dalam variabel 

        angka <- c(3,5,7)

        utk mempersingkat penulisan nilai yg berurutan, bisa menggunakkan : 

            angka1 <- c(1,2,3,4,5,6,7,8,9,10)
            print(angka1)
            angka2 <- c(1:10)
            print(angka2)

            adalah sama
        
        kita juga bisa menyimpan array string pada R 
            
            nama_mahasiswa <- c("Amira", "Budi", "Charlie")
            print(nama_mahasiswa)
            # outputnya [1] Amira, Budi, Charlie 

        utk mengakses indeks, maka gunakan accessor [] (format kurung siku)
            angka1 <- c(1,2,3,4,5,6,7,8,9,10)
            print(angka1[3])
            # outputnya [1] 3 

        pada R, indeks dimulai dari 1, bukan dari 0 
        
        kita juga bisa menggunakkan accessor [[]] (format kurung siku double)
            print(angka1[[5]])
            # outputnya tetap indeks ke 5
        
        jika ingin mengoutput nilai tertentu dan secara berurut, maka gunakan :
            print(angka1[4:6])
            # outputnya adalah indeks 4,5,6
    
    Named Vector (masih sama dengan vector)
        kita juga bisa memberi nama utk tiap elemen dengan format key=value 
        sehingga disebtus sebagai named vector (sama seperti dictionary pada python)

        nilai <- c(statistik = 89, fisika = 95, ilmukomunikasi = 100) # key tidak perlu diberi tanda petik
        print(nilai)
            
            # outputnya
            statistik         fisika ilmukomunikasi 
                    89             95            100 
        
        bila diperhatikan juga, tidak ada [1] saat output 

        jika ingin mengoutput salah satu nilai, maka menggunakkan accessor
        print(nilai ["fisika"]) # jangan lupa tanda petik karena string 

            # outputnya
            fisika  
                95            

    List 
        tipe data yg menyimpan deretan nilai dengan tipe data yg berbeda"" (sama seperti list pada Python)
        list_random <- list(2,"Budi", 4) 

        jika di print, maka 
            list_random 
            [[1]]
            [1] 2
            
            [[2]]
            [1] "Budi"
            
            [[3]]
            [1] 4
        
        outputnya terlihat berbeda dengan vector, tiap output memiliki 2 accessor
            [[]] = posisi indeks pada list 
            [] = posisi indeks saat output

        List juga bisa menyimpan named vector 
        kota <- list(nama_kota = "Makassar", propinsi = "Sulawesi Selatan", luas_km = 199.3)

        jika di print, maka 
            kota
            $nama_kota
            [1] "Makassar"
            
            $propinsi
            [1] "Sulawesi Selatan"
            
            $luas_km
            [1] 199.3

        berbeda dengan list biasanya 
        
        utk mengambil indeks pada list, sama seperti vector, menggunakkan accessor
            list_saya[2]
            atau 
            list_saya[[2]]

        lalu utk mengambil indeks tertentu dan secara urut, menggunakkan :
            list_saya[4:6]

    Data Frame 
        struktur data yg dirancang utk menjadi representasi tabel yg tiap kolom berisi vector/list (disarankan vector) dengan jumlah data harus sama (jika tidak, maka error)
        maka, utk menggunakkan data frame, kita menggunakkan func data.frame() 
        
        sehingga, data.frame() harus berisi minimal 2 list
        cth :
            fakultas <- c("Bisnis", "D3 Perhotelan", "ICT", "Ilmu Komunikasi", "Seni dan Desain")
            jumlah_mahasiswa <- c(260, 28, 284, 465, 735)

            info_mahasiswa <- data.frame(fakultas, jumlah_mahasiswa)

            print(info_mahasiswa)
            # maka outputnya 
            info_mahasiswa
                    fakultas jumlah_mahasiswa
            1          Bisnis              260
            2   D3 Perhotelan               28
            3             ICT              284
            4 Ilmu Komunikasi              465
            5 Seni dan Desain              735

            usahakan agar data yg dimasukkan adalah sesama vector (jika tipe datanya sama) karena tidak terjadi bug
        
        kita juga bisa memasukkan hasil data.frame ke dalam data.frame  
            akreditasi <- c("A","A","B","A","A")
            info_mahasiswa <- data.frame(info_mahasiswa, akreditasi) 
                # info_mahasiswa adalah variabel yg sama, tapi msih bisa
            print(info_mahasiswa)
            # maka outputnya 
            info_mahasiswa
                    fakultas jumlah_mahasiswa akreditasi
            1          Bisnis              260          A
            2   D3 Perhotelan               28          A
            3             ICT              284          B
            4 Ilmu Komunikasi              465          A
            5 Seni dan Desain              735          A

        atau, untuk mempersingkat kode, data.frame bisa dimasukkan lebih dari 2 vector 
            info_mahasiswa <- data.frame(fakultas, jumlah_mahasiswa, akreditasi)

        utk mengakses suatu kolom pada data.frame, kita menggunakkan accessor dengan simbol $
            info_mahasiswa$akreditasi #jika salah mengetikkan kolom, maka akan tertulis NULL, bukan error
            # maka outputnya
            info_mahasiswa$jumlah_mahasiswa
            [1] 260  28 284 465 735
        
Library 
    R juga memiliki library, salah satu library tersebut adalah ggplot2 (grammar of graphic plot 2)
        (sama seperti matplotlib (matlab, plot, library)di python)
    
    Dari pembuatan data.frame sebelumnya, bisa kita kembangkan agar menghasilkan grafik yg advanced

    utk menggunakkan library, perlu melakukan import terhadap library yg dibutuhkan
        library("ggplot2") atau library(ggplot2)

    lalu, kita buat canvas dan pengaturannya 
        fakultas <- c("Bisnis", "D3 Perhotelan", "ICT", "Ilmu Komunikasi", "Seni dan Desain")
        jumlah_mahasiswa <- c(260, 28, 284, 465, 735)
        akreditasi <- c("A","A","B","A","A")
        info_mahasiswa <- data.frame(fakultas, jumlah_mahasiswa, akreditasi)

        library("ggplot2") # akan lebih bagus jika di import di awal file

        gambar <- ggplot(info_mahasiswa, aes(x = fakultas, y =jumlah_mahasiswa, fill = fakultas))
        gambar <- gambar + geom_bar(width = 1, stat = "identity")

        #maka outputnya 
            adalah gambar grafik
        
        yg berarti
            ggplot() = fungsi utk menggambar grafik pada ggplot
            aes = fungsi utk mengambil data apa saja
            x = kolom utk sumbu x
            y = kolom utk sumbu y 
            fill = kolom mana yg akan diberi warna (jika tidak ada, maka grafik hitam putih)
        
            + = menggabungkn objek"" ggplot2

            geom_bar() = fungsi utk mengambar grafik dlm bntuk geometri bar chart
            width = ukuran lebar dri tiap chart (1)
            stat = transformasi data yg perlu dilakukan 
                karena ingin menggunakkan plot apa adanya, kita gunakan identity (sbnrnya ada banyak)
            
        lalu, utk menambahkan judul grafik 
            gambar <- gambar + ggtitle("Jumlah Mahasiswa per Fakultas")
        lalu utk mengganti caption pada sumbu x (yg sblmnya mengambil nama variabel x)
            gambar <- gambar + xlab("Nama Fakultas")
        lalu utk mengganti caption pada sumbu y 
            gambar <- gambar + ylab("Jumlah mahasiswa")
        
    R juga memiliki library bernama openxlsx utk membaca file excel, dan perlu dilakukan import
        library(openxlsx) 
    
    lalu, dibuatlah 1 variabel (data.frame) utk membaca file tersebut 
        data_mahasiswa <- read.xlsx("https://storage.googleapis.com/dqlab-dataset/mahasiswa.xlsx",sheet = "Sheet 1")
        print(data_mahasiswa)
        #maka outputnya 
            ANGKATAN        Fakultas                          Prodi  Kode JUMLAH
        1      2015          Bisnis                      Akuntansi  AKUN     88
        2      2016          Bisnis                      Akuntansi  AKUN     85
        3      2017          Bisnis                      Akuntansi  AKUN    103
        4      2016 Seni dan Desain                        Arsitek    AR     28
        5      2017 Seni dan Desain                        Arsitek    AR     45
        6      2015 Seni dan Desain       Desain Komunikasi Visual   DKV    279
        7      2016 Seni dan Desain       Desain Komunikasi Visual   DKV    314
        8      2017 Seni dan Desain       Desain Komunikasi Visual   DKV    337
        9      2015 Seni dan Desain              Film dan Televisi   FTV    284
        10     2016 Seni dan Desain              Film dan Televisi   FTV    274
        11     2017 Seni dan Desain              Film dan Televisi   FTV    300
        12     2015 Ilmu Komunikasi                Ilmu Komunikasi ILKOM    499
        13     2016 Ilmu Komunikasi                Ilmu Komunikasi ILKOM    275
        14     2017 Ilmu Komunikasi                Ilmu Komunikasi ILKOM    313
        15     2015 Ilmu Komunikasi                    Jurnalistik    JR      1
        16     2016 Ilmu Komunikasi                    Jurnalistik    JR    251
        17     2017 Ilmu Komunikasi                    Jurnalistik    JR    186
        18     2015          Bisnis                      Manajemen   MAN    169
        19     2016          Bisnis                      Manajemen   MAN    163
        20     2017          Bisnis                      Manajemen   MAN    160
        21     2017   D3 Perhotelan                     Perhotelan   HTL     28
        22     2015             ICT               Sistem Informasi    SI    104
        23     2016             ICT               Sistem Informasi    SI     95
        24     2017             ICT               Sistem Informasi    SI    113
        25     2015             ICT                Sistem Komputer    SK     20
        26     2016             ICT                Sistem Komputer    SK     20
        27     2017             ICT                Sistem Komputer    SK     18
        28     2016             ICT                 Teknik Elektro    TE      4
        29     2017             ICT                 Teknik Elektro    TE      7
        30     2016             ICT                  Teknik Fisika    TF      7
        31     2017             ICT                  Teknik Fisika    TF     16
        32     2015             ICT             Teknik Informatika    TI    125
        33     2016             ICT             Teknik Informatika    TI    168
        34     2017             ICT             Teknik Informatika    TI    164
        35     2017             ICT Teknik Informatika Dual Degree   TID      6

    sehingga, apabila kita ingin membuat grafik tersebut, maka kita tinggal gunakan library(ggplot2)

        library(ggplot2)
        gambar <- ggplot(data_mahasiswa,aes(x = Fakultas, y = JUMLAH, fill = Fakultas))
        gambar <- gambar + geom_bar(width = 1, stats = "identity")
        gambar
    
    sehingga, bisa dilihat, kalau kita menggunakkan excel,kita tinggal memasukkan link beserta sheetsnya ke dalm suatu variabel
        sedangkan bila tdk menggunakkan excel, kita harus membuat datanya satu persatu 
    
    dari pembelajaran tersebut, kita bisa membuat perbandingan data seperti sebagai berikut 

        library(ggplot2)
        #Menggunakan package openxlsx
        library(openxlsx)

        #Membaca file mahasiswa.xlsx
        mahasiswa <- read.xlsx("https://storage.googleapis.com/dqlab-dataset/mahasiswa.xlsx",sheet = "Sheet 1")
    
        #Menghitung Jumlah Data by Fakultas
        summarybyfakultas <- aggregate(x=mahasiswa$JUMLAH, by=list(Kategori=mahasiswa$Fakultas, Tahun=mahasiswa$ANGKATAN), FUN=sum)
        summarybyfakultas <- setNames(summarybyfakultas, c("fakultas","tahun", "jumlah_mahasiswa"))
        summarybyfakultas

        summarybyfakultas$tahun = as.factor(summarybyfakultas$tahun)

        ggplot(summarybyfakultas, aes(x=fakultas, y=jumlah_mahasiswa)) + geom_bar(stat = "identity", aes(fill = tahun), width=0.8, position = position_dodge(width=0.8)) + theme_classic() 
        #tidak perlu membuat variabel baru 

    kita juga bisa membuat pie chart dengan library ggplot2 menggunakkan fungsi ggplot dan coord_polar 

        library(ggplot2)
        library(openxlsx)
        #Membaca file mahasiswa.xlsx
        mahasiswa <- read.xlsx("https://storage.googleapis.com/dqlab-dataset/mahasiswa.xlsx",sheet = "Sheet 1")

        #Menghitung Jumlah Data by Fakultas
        summarybyfakultas <- aggregate(x=mahasiswa$JUMLAH, by=list(Kategori=mahasiswa$Fakultas), FUN=sum)
        summarybyfakultas <- setNames(summarybyfakultas, c("fakultas","jumlah_mahasiswa"))

        piechart<- ggplot(summarybyfakultas, aes(x="", y=jumlah_mahasiswa, fill=fakultas))+ geom_bar(width = 1, stat = "identity")
        piechart <- piechart + coord_polar("y", start=0)
        piechart <- piechart + ggtitle("Disribusi Mahasiswa per Fakultas")
        piechart <- piechart + scale_fill_brewer(palette="Blues")+ theme_minimal()
        piechart <- piechart + guides(fill=guide_legend(title="Fakultas"))
        piechart <- piechart + ylab("Jumlah Mahasiswa") 
        piechart

    piechart tersebut akan menampilkan persentase potongannya sesuai dengan jumlah data yg ada
        sebagai contoh, Bisnis, D3 Perhotelan dan ICT memiliki jumlah tidak mencapai 2000, sehingga piechart nya tidak mencapai angka 2000

    kita juga bisa melakukan filtering pada R 
        dengan operator %in% dan input berupa vector 

        library("ggplot2")
        library("openxlsx")

        #Membaca file mahasiswa.xlsx
        mahasiswa <- read.xlsx("https://storage.googleapis.com/dqlab-dataset/mahasiswa.xlsx",sheet = "Sheet 1")

        #Menghitung Jumlah Data by Fakultas
        summarybyfakultas <- aggregate(x=mahasiswa$JUMLAH, by=list(Kategori=mahasiswa$Fakultas, Tahun=mahasiswa$ANGKATAN), FUN=sum)
        summarybyfakultas <- setNames(summarybyfakultas, c("fakultas","tahun", "jumlah_mahasiswa"))
        summarybyfakultas

        summarybyfakultas$tahun = as.factor(summarybyfakultas$tahun)
        summarybyfakultas[summarybyfakultas$fakultas %in% c("ICT", "Ilmu Komunikasi"),] # memfilter data di kolom fakultas dari data.frame summarybyfakultas

        ggplot(summarybyfakultas[summarybyfakultas$fakultas %in% c("ICT", "Ilmu Komunikasi"),], # mengambil data yg sblmnya sudah difilter dari semua kolom
        aes(x=fakultas, y=jumlah_mahasiswa)) + geom_bar(stat = "identity", aes(fill = tahun), width=0.8, position = position_dodge(width=0.8)) + theme_classic() 
    
        maka, yg muncul hanya data dari ICT dan ILKOM